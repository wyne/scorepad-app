{"version":3,"sources":["src/components/PlayerTiles/AdditionTile.js","src/components/PlayerScore.js","redux/CurrentGameActions.js","src/components/Rounds.js","src/screens/ScoreBoardScreen.js","src/components/EditPlayer.js","src/screens/ConfigureScreen.js","redux/CurrentGameReducer.js","redux/SettingsActions.js","redux/SettingsReducer.js","redux/store.js","src/components/RoundTitle.js","App.js","assets/infographic.png"],"names":["styles","StyleSheet","create","name","alignSelf","color","fontSize","fontWeight","justifyContent","textAlign","roundScore","fontVariant","marginTop","totalScore","margin","padding","label","PlayerScore","playerName","fontColor","maxWidth","maxHeight","useState","scale","setScale","w","setW","h","setH","useEffect","hs","vs","Math","min","View","style","transform","onLayout","e","nativeEvent","layout","width","x","y","height","alignItems","Text","numberOfLines","adjustsFontSizeToFit","lineHeight","playerCard","flexGrow","overflow","surface","position","borderColor","surfaceAdd","top","bottom","surfaceSubtract","roundBox","borderRadius","borderWidth","totalLabel","playerIndex","cols","rows","players","useSelector","state","currentGame","scores","currentRound","multiplier","settings","dispatch","useDispatch","setWidth","setHeight","reduce","sum","current","round","widthPerc","heightPerc","backgroundColor","AdditionTile","TouchableHighlight","underlayColor","activeOpacity","onPress","index","type","incPlayerRoundScore","decPlayerRoundScore","totalHeader","scoreEntry","Rounds","navigation","show","palette","roundScollOffsets","setRoundScrollOffsets","currentRoundEl","useRef","roundsScrollViewEl","scrollTo","animated","Platform","OS","SafeAreaView","edges","flexDirection","paddingBottom","map","player","key","paddingLeft","borderLeftWidth","a","b","ScrollView","horizontal","contentContainerStyle","ref","item","event","offsets","handleCurrentRoundLayout","TouchableOpacity","navigate","Icon","size","ms","appContainer","left","right","contentStyle","flex","flexWrap","alignContent","footerStyle","playerContainer","marginVertical","input","EditPlayer","setPlayerWasAdded","promptColor","playerWasAdded","setPlayerNameHandler","setPlayerName","uuid","marginHorizontal","containerStyle","defaultValue","length","autoFocus","placeholder","selectTextOnFocus","renderErrorMessage","onEndEditing","text","maxLength","onChangeText","removePlayer","removePlayerHandler","appJson","require","configScrollContainer","ConfigureScreen","isNewGame","setIsNewGame","sheetRef","React","snapTo","chooseColor","snapPoints","initialSnap","renderContent","onTouchEnd","onOpenStart","onCloseEnd","Image","source","resizeMode","resizeMethod","Dimensions","get","aspectRatio","icon","title","paddingTop","disabled","expo","version","ios","buildNumber","android","versionCode","initialState","uuidv4","currentGameReducer","action","incrementedPlayerScores","decrementedPlayerScores","prevRound","nextRound","undefined","copy","forEach","apPlayers","concat","apScores","Array","fill","rpCopy","splice","rpScores","newScores","toggleHomeFullscreen","toggleMultiplier","home_fullscreen","settingsReducer","currentGamePersistConfig","storage","AsyncStorage","whitelist","migrate","createMigrate","debug","settingsPersistConfig","rootReducer","combineReducers","persistReducer","store","createStore","persistor","persistStore","paddingHorizontal","roundButton","RoundTitle","expanded","opacity","navigator","createStackNavigator","ScoreBoard","screen","grid","setGrid","closestAspectRatio","Number","MAX_SAFE_INTEGER","bestRowCount","ceil","ratio","abs","getContrastRatio","number","navigationOptions","headerShown","header","Configure","headerBackTitle","initialRouteName","defaultNavigationOptions","Navigation","createAppContainer","App","loading","theme","Component","module","exports"],"mappings":"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","file":"static/js/app.9408808d.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Text, View, StyleSheet } from 'react-native';\n\nconst PlayerScore = ({ playerName, totalScore, roundScore, fontColor, maxWidth, maxHeight }) => {\n    const [scale, setScale] = useState(1);\n    const [w, setW] = useState(0);\n    const [h, setH] = useState(0);\n\n    const layoutHandler = (e) => {\n        const { x, y, width, height } = e.nativeEvent.layout;\n        setH(height);\n        setW(width);\n    }\n\n    useEffect(() => {\n        const hs = maxWidth / w;\n        const vs = maxHeight / h;\n        if (hs > 0 && hs < 2) {\n            setScale(Math.min(.7 * hs, .7 * vs));\n        }\n    })\n\n    return (\n        <View style={{ padding: 10, transform: [{ scale: scale }] }} onLayout={layoutHandler}>\n            <View style={{ justifyContent: 'center', alignItems: 'center' }}>\n                <Text numberOfLines={1} adjustsFontSizeToFit style={[styles.name, { color: fontColor }]}>\n                    {playerName}\n                </Text>\n            </View>\n            <View>\n                {roundScore != 0 &&\n                    <Text numberOfLines={1} adjustsFontSizeToFit\n                        style={[styles.roundScore, { color: fontColor + '75', fontSize: 35 },]}>\n                        {roundScore > 0 && \"+\"} {roundScore}\n                    </Text>\n                }\n                <Text adjustsFontSizeToFit numberOfLines={1} style={[styles.totalScore, { fontSize: 55, lineHeight: 55, color: fontColor }]}>\n                    {roundScore != 0 && <Text style={[styles.label, { color: fontColor + '75' }]}>=</Text>}\n                    {totalScore}\n                </Text>\n            </View>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    name: {\n        alignSelf: 'center',\n        color: 'white',\n        fontSize: 50,\n        fontWeight: 'bold',\n        justifyContent: 'center',\n        textAlign: 'center',\n    },\n    roundScore: {\n        color: 'white',\n        fontVariant: ['tabular-nums'],\n        marginTop: 10,\n        textAlign: 'center',\n    },\n    totalScore: {\n        alignSelf: 'center',\n        fontVariant: ['tabular-nums'],\n        fontWeight: 'bold',\n        margin: 0,\n        marginTop: 0,\n        padding: 0,\n    },\n    label: {\n        alignSelf: 'center',\n        color: 'white',\n        fontVariant: ['tabular-nums'],\n        textAlign: 'center',\n    },\n});\n\nexport default PlayerScore;\n","import React, { useState } from 'react';\nimport { Text, View, StyleSheet, TouchableHighlight } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { s, vs, ms, mvs } from 'react-native-size-matters';\nimport AdditionTile from './PlayerTiles/AdditionTile';\n\nimport { incPlayerRoundScore, decPlayerRoundScore } from '../../redux/CurrentGameActions';\n\nconst PlayerScore = ({ playerIndex, color, fontColor, cols, rows }) => {\n    const players = useSelector(state => state.currentGame.players);\n    const scores = useSelector(state => state.currentGame.scores);\n    const currentRound = useSelector(state => state.currentGame.currentRound);\n    const multiplier = useSelector(state => state.settings.multiplier);\n    const dispatch = useDispatch();\n\n    const [width, setWidth] = useState(0);\n    const [height, setHeight] = useState(0);\n\n    const totalScore = scores[playerIndex].reduce(\n        (sum, current, round) => {\n            if (round > currentRound) { return sum; }\n            return (sum || 0) + (current || 0);\n        }\n    );\n\n    const roundScore = scores[playerIndex][currentRound] || 0\n\n    const incPlayerRoundScoreHandler = () => {\n        dispatch(incPlayerRoundScore(playerIndex, multiplier));\n    }\n\n    const decPlayerRoundScoreHandler = () => {\n        dispatch(decPlayerRoundScore(playerIndex, multiplier));\n    }\n\n    const widthPerc = (100 / cols) + '%';\n    const heightPerc = (100 / rows) + '%';\n\n    const layoutHandler = (e) => {\n        var { x, y, width, height } = e.nativeEvent.layout;\n\n        setWidth(width);\n        setHeight(height);\n    }\n\n    return (\n        <View\n            style={[\n                styles.playerCard,\n                { backgroundColor: color },\n                { width: widthPerc },\n                { height: heightPerc },\n            ]}\n            onLayout={layoutHandler}\n        >\n\n            <AdditionTile\n                totalScore={totalScore}\n                roundScore={roundScore}\n                fontColor={fontColor}\n                playerName={players[playerIndex].name}\n                maxWidth={width}\n                maxHeight={height}\n            />\n\n            <TouchableHighlight\n                style={[styles.surface, styles.surfaceAdd]}\n                underlayColor={fontColor + '30'}\n                activeOpacity={1}\n                onPress={incPlayerRoundScoreHandler}>\n                <></>\n            </TouchableHighlight>\n\n            <TouchableHighlight\n                style={[styles.surface, styles.surfaceSubtract]}\n                underlayColor={fontColor + '30'}\n                activeOpacity={1}\n                onPress={decPlayerRoundScoreHandler}>\n                <></>\n            </TouchableHighlight>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    playerCard: {\n        flexGrow: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        overflow: 'hidden',\n    },\n    surface: {\n        position: 'absolute',\n        width: '100%',\n        borderColor: 'red',\n    },\n    surfaceAdd: {\n        top: 0,\n        bottom: '50%',\n    },\n    surfaceSubtract: {\n        top: '50%',\n        bottom: 0,\n    },\n    name: {\n        color: 'white',\n        fontSize: 50,\n        fontWeight: 'bold',\n        textAlign: 'center',\n        justifyContent: 'center',\n        alignSelf: 'center',\n    },\n    roundScore: {\n        marginTop: 10,\n        textAlign: 'center',\n        color: 'white',\n        fontVariant: ['tabular-nums'],\n    },\n    roundBox: {\n        // padding: 5,\n        padding: 10,\n        borderRadius: 5,\n        borderWidth: 2,\n        alignSelf: 'center'\n    },\n    totalScore: {\n        fontVariant: ['tabular-nums'],\n        fontWeight: 'bold',\n        alignSelf: 'center',\n        margin: 0,\n        marginTop: 0,\n        padding: 0,\n    },\n    label: {\n        textAlign: 'center',\n        alignSelf: 'center',\n        color: 'white',\n    },\n    totalLabel: {\n        fontVariant: ['tabular-nums'],\n        alignSelf: 'center',\n        textAlign: 'center',\n    },\n});\n\nexport default PlayerScore;","export const INC_PLAYER_ROUND_SCORE = 'INC_PLAYER_ROUND_SCORE';\nexport const DEC_PLAYER_ROUND_SCORE = 'DEC_PLAYER_ROUND_SCORE';\nexport const NEXT_ROUND = 'NEXT_ROUND'\nexport const PREV_ROUND = 'PREV_ROUND'\nexport const SET_PLAYER_NAME = 'SET_PLAYER_NAME';\nexport const NEW_GAME = 'NEW_GAME';\nexport const ADD_PLAYER = 'ADD_PLAYER';\nexport const REMOVE_PLAYER = 'REMOVE_PLAYER';\n\nexport const incPlayerRoundScore = (index, multiplier) => {\n    return { type: INC_PLAYER_ROUND_SCORE, index: index, multiplier }\n}\n\nexport const decPlayerRoundScore = (index, multiplier) => {\n    return { type: DEC_PLAYER_ROUND_SCORE, index: index, multiplier }\n}\n\nexport const nextRound = (index, round) => {\n    return { type: NEXT_ROUND }\n}\n\nexport const prevRound = (index, round) => {\n    return { type: PREV_ROUND }\n}\n\nexport const setPlayerName = (index, name) => {\n    return { type: SET_PLAYER_NAME, index: index, name: name }\n}\n\nexport const newGame = () => {\n    return { type: NEW_GAME }\n}\n\nexport const addPlayer = (name) => {\n    return { type: ADD_PLAYER, name: name }\n}\n\nexport const removePlayer = (index) => {\n    return { type: REMOVE_PLAYER, index: index }\n}","import React, { useEffect, useRef, useState } from 'react';\nimport { Text, View, StyleSheet, TouchableOpacity, ScrollView, Platform } from 'react-native';\nimport { s, vs, ms, mvs } from 'react-native-size-matters';\nimport { Icon } from 'react-native-elements/dist/icons/Icon';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { SafeAreaView } from 'react-native-safe-area-context';\n\nfunction Rounds({ navigation, show }) {\n    const palette = [\"01497c\", \"c25858\", \"f5c800\", \"275436\", \"dc902c\", \"62516a\", \"755647\", \"925561\"];\n    const [roundScollOffsets, setRoundScrollOffsets] = useState([]);\n\n    const players = useSelector(state => state.currentGame.players);\n    const scores = useSelector(state => state.currentGame.scores);\n    const currentRound = useSelector(state => state.currentGame.currentRound);\n    const currentRoundEl = useRef()\n    const roundsScrollViewEl = useRef()\n\n    useEffect(() => {\n        roundsScrollViewEl.current.scrollTo({\n            x: roundScollOffsets[currentRound],\n            animated: Platform.OS == \"ios\" ? true : false\n        })\n    })\n\n    const handleCurrentRoundLayout = (event, round) => {\n        const offsets = [...roundScollOffsets];\n        offsets[round] = event.nativeEvent.layout.x;\n        setRoundScrollOffsets(offsets)\n    }\n\n    return (\n        <SafeAreaView edges={['right', 'left']} style={{ flexDirection: 'row', backgroundColor: 'black', paddingBottom: 10, height: show ? 'auto' : 0 }}>\n\n            <View style={{ padding: 10, color: 'white' }}>\n                <Text style={{ color: 'white', fontSize: 20 }}> &nbsp; </Text>\n                {players.map((player, index) => (\n                    <View key={index} style={{ paddingLeft: 2, borderLeftWidth: 5, borderColor: \"#\" + palette[index] }}>\n                        <Text key={index} style={{ color: 'white', maxWidth: 100, fontSize: 20, }}\n                            numberOfLines={1}\n                        >{player.name}</Text>\n                    </View>\n                ))}\n            </View>\n\n            <View key={'total'} style={{ padding: 10 }}>\n                <Text style={[styles.totalHeader]}>\n                    Total\n                </Text>\n                {players.map((player, playerIndex) => (\n                    <Text key={playerIndex} style={[styles.scoreEntry, { color: 'white', fontWeight: 'bold' }]} >\n                        {scores[playerIndex].reduce(\n                            (a, b) => { return (a || 0) + (b || 0); }\n                        )}\n                    </Text>\n                ))}\n            </View>\n\n            <ScrollView horizontal={true} contentContainerStyle={{ flexDirection: 'row' }} ref={roundsScrollViewEl}>\n                {scores[0].map((item, round) => (\n                    <View key={round} style={{ padding: 10 }}\n                        ref={currentRound == round ? currentRoundEl : null}\n                        onLayout={(e) => handleCurrentRoundLayout(e, round)}\n                        backgroundColor={round == currentRound ? '#111' : 'black'}>\n                        <Text style={{\n                            color: currentRound == round ? 'red' : 'yellow',\n                            fontWeight: 'bold',\n                            textAlign: 'center',\n                            fontSize: 20,\n                        }}>\n                            {round + 1}\n                        </Text>\n                        {players.map((player, playerIndex) => (\n                            <Text key={playerIndex} style={[\n                                styles.scoreEntry,\n                                { color: scores[playerIndex][round] == 0 ? '#555' : 'white' }]}>\n                                {scores[playerIndex][round]}\n                            </Text>\n                        ))}\n                    </View>\n                ))}\n            </ScrollView>\n\n            <View style={{ flexDirection: 'column', justifyContent: 'space-around', padding: 10 }}>\n                <TouchableOpacity\n                    style={{ justifyContent: 'center' }}\n                    onPress={() => { navigation.navigate(\"Configure\") }}\n                >\n                    {show && <Icon size={ms(30, .4)} color='#0a84ff' style={{ textAlign: 'center' }} name=\"cog\" type=\"font-awesome-5\" />}\n                    {show && <Text style={{ color: '#0a84ff', fontWeight: 'bold' }}>Settings</Text>}\n                </TouchableOpacity>\n            </View>\n        </SafeAreaView >\n    );\n}\n\nconst styles = StyleSheet.create({\n    totalHeader: {\n        color: 'white',\n        fontWeight: 'bold',\n        textAlign: 'center',\n        fontSize: 20,\n    },\n    scoreEntry: {\n        fontVariant: ['tabular-nums'],\n        textAlign: 'center',\n        color: 'white',\n        fontSize: 20,\n    }\n});\n\nexport default Rounds;","import React, { useState } from 'react';\nimport { Text, View, StyleSheet } from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\n\nimport PlayerScore from '../components/PlayerScore'\nimport Rounds from '../components/Rounds';\nimport { useSelector } from 'react-redux';\nimport { getContrastRatio } from 'colorsheet';\n\nexport default function ScoreBoardScreen({ navigation }) {\n    const palette = [\"01497c\", \"c25858\", \"f5c800\", \"275436\", \"dc902c\", \"62516a\", \"755647\", \"925561\"]\n\n    const [grid, setGrid] = useState({ rows: 0, cols: 0 });\n    const players = useSelector(state => state.currentGame.players);\n    const expanded = useSelector(state => state.settings.home_fullscreen);\n\n    const desiredAspectRatio = 0.8;\n\n    const layoutHandler = (e) => {\n        var { x, y, width, height } = e.nativeEvent.layout;\n\n        let closestAspectRatio = Number.MAX_SAFE_INTEGER\n        let bestRowCount = 1;\n\n        for (let rows = 1; rows <= players.length; rows++) {\n            const cols = Math.ceil(players.length / rows);\n\n            if (players.length % rows > 0 && rows - players.length % rows > 1) {\n                continue;\n            }\n\n            const w = width / cols;\n            const h = height / rows;\n            const ratio = w / h;\n\n            if (Math.abs(desiredAspectRatio - ratio) < Math.abs(desiredAspectRatio - closestAspectRatio)) {\n                closestAspectRatio = ratio;\n                bestRowCount = rows;\n            }\n        }\n\n        setGrid({ rows: bestRowCount, cols: Math.ceil(players.length / bestRowCount) })\n    }\n\n    return (\n        <SafeAreaView style={{ flex: 1 }}>\n            <View style={styles.appContainer}>\n                <View style={styles.contentStyle} onLayout={layoutHandler} >\n                    {players.map((name, index) => (\n                        <PlayerScore\n                            key={index}\n                            playerIndex={index}\n                            color={'#' + palette[index % palette.length]}\n                            fontColor={getContrastRatio('#' + palette[index % palette.length], '#000').number > 7 ? \"#000000\" : \"#FFFFFF\"}\n                            cols={(grid.rows != 0 && grid.cols != 0) ? grid.cols : 0}\n                            rows={(grid.rows != 0 && grid.cols != 0) ? grid.rows : 0}\n                        />\n                    ))}\n                </View>\n\n                <Rounds style={styles.footerStyle} navigation={navigation} show={expanded} />\n            </View>\n        </SafeAreaView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    appContainer: {\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        position: 'absolute',\n    },\n    contentStyle: {\n        flex: 1,\n        flexGrow: 1,\n        flexWrap: 'wrap',\n        alignContent: 'stretch',\n        flexDirection: 'row',\n        maxWidth: '100%',\n        backgroundColor: '#000000'\n    },\n    footerStyle: {\n        flex: 1,\n    }\n});\n\n","import React from 'react';\nimport { Text, View, StyleSheet } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setPlayerName, removePlayer } from '../../redux/CurrentGameActions';\nimport { s, vs, ms, mvs } from 'react-native-size-matters';\nimport { Icon, Input } from 'react-native-elements'\nimport { getContrastRatio } from 'colorsheet';\n\nconst EditPlayer = ({ player, index, promptColor, setPlayerWasAdded, playerWasAdded }) => {\n    const palette = [\"01497c\", \"c25858\", \"f5c800\", \"275436\", \"dc902c\", \"62516a\", \"755647\", \"925561\"];\n    const dispatch = useDispatch();\n    const players = useSelector(state => state.currentGame.players);\n\n    const setPlayerNameHandler = (index, name) => {\n        dispatch(setPlayerName(index, name));\n        setPlayerWasAdded(false)\n    }\n\n    const removePlayerHandler = (index) => {\n        dispatch(removePlayer(index));\n    }\n\n    return (\n        <View style={styles.playerContainer} key={player.uuid}>\n            <Text style={{\n                fontVariant: ['tabular-nums'],\n                fontSize: 35,\n                padding: 5,\n                fontWeight: \"bold\",\n                color: \"#0a84ff\"\n            }}>{index + 1}</Text>\n\n            <View style={{\n                width: 30,\n                height: 30,\n                borderRadius: 25,\n                borderWidth: 1,\n                borderColor: '#eee',\n                padding: 5,\n                marginHorizontal: 5\n            }}\n                // onTouchStart={promptColor}\n                backgroundColor={\"#\" + palette[index]}>\n                {/*<Icon\n                    name=\"edit\"\n                    size={20}\n                    color={getContrastRatio('#' + palette[index], '#000').number > 7 ? \"black\" : \"white\"}\n                ></Icon> */}\n            </View>\n\n            <Input style={styles.input}\n                containerStyle={{ flex: 1 }}\n                defaultValue={index == players.length - 1 && playerWasAdded ? null : player.name}\n                autoFocus={index == players.length - 1 && playerWasAdded}\n                placeholder={'Player ' + (index + 1)}\n                selectTextOnFocus={true}\n                renderErrorMessage={false}\n                // label={\"Player  \" + (index + 1) + \" Name\"}\n                onEndEditing={(e) => {\n                    if (e.nativeEvent.text == \"\") {\n                        setPlayerNameHandler(index, 'Player ' + (index + 1));\n                    }\n                }}\n                maxLength={15}\n                onChangeText={(text) => setPlayerNameHandler(index, text)} />\n\n            {index > 0 &&\n                <Icon name=\"delete\" color=\"#ff375f\" onPress={() => removePlayerHandler(index)}></Icon>\n            }\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    playerContainer: {\n        margin: 10,\n        marginVertical: 5,\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        flexDirection: 'row',\n    },\n    input: {\n        color: '#eee',\n    },\n});\n\nexport default EditPlayer;\n","import React, { useState } from 'react';\nimport { Platform, Text, View, StyleSheet, Image, Dimensions } from 'react-native';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { newGame, addPlayer } from '../../redux/CurrentGameActions';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { Icon, Button } from 'react-native-elements'\nimport Animated from 'react-native-reanimated';\nimport BottomSheet from 'reanimated-bottom-sheet';\nimport EditPlayer from '../components/EditPlayer';\n\nconst appJson = require('../../app.json');\n\nconst ConfigureScreen = () => {\n    const palette = [\"01497c\", \"c25858\", \"f5c800\", \"275436\", \"dc902c\", \"62516a\", \"755647\", \"925561\"];\n    const [isNewGame, setIsNewGame] = useState(false)\n    const [playerWasAdded, setPlayerWasAdded] = useState(false)\n\n    const players = useSelector(state => state.currentGame.players);\n    const dispatch = useDispatch();\n\n    const newGameHandler = () => {\n        dispatch(newGame());\n        setIsNewGame(true);\n    }\n\n    const addPlayerHandler = () => {\n        dispatch(addPlayer('Player ' + (players.length + 1)));\n        setPlayerWasAdded(true)\n    }\n\n    const sheetRef = React.useRef(null);\n\n    const renderContent = () => (\n        <View style={{\n            backgroundColor: 'rgb(44, 44, 46)',\n            padding: 0,\n        }}>\n            <Text style={styles.text}>Swipe down to close</Text>\n            {palette.map((color) => (\n                <View width={\"100%\"} height={100} backgroundColor={'#' + color} key={color}\n                    onTouchEnd={chooseColor}\n                ></View>\n            ))}\n        </View>\n    );\n\n    const promptColor = () => { sheetRef.current.snapTo(0) }\n    const chooseColor = () => { sheetRef.current.snapTo(1) }\n\n    return (\n        <KeyboardAwareScrollView style={styles.configScrollContainer} contentContainerStyle={{ alignItems: 'stretch' }}>\n\n            <BottomSheet\n                ref={sheetRef}\n                snapPoints={[450, 0]}\n                initialSnap={1}\n                borderRadius={20}\n                renderContent={renderContent}\n                onOpenStart={() => null}\n                onCloseEnd={() => null}\n            />\n\n            <View style={{ width: 350, alignSelf: 'center' }}>\n                <Image\n                    source={require('../../assets/infographic.png')}\n                    resizeMode={'contain'}\n                    resizeMethod={'scale'}\n                    alignSelf={'center'}\n                    style={{\n                        width: Math.min(Dimensions.get('window').width * .4, Dimensions.get('window').height * .4),\n                        height: Math.min(Dimensions.get('window').width * .4, Dimensions.get('window').height * .4),\n                        maxWidth: '50%',\n                        aspectRatio: 1,\n                        margin: 20,\n                    }}\n                />\n\n                <View style={{ margin: 10, }}>\n                    <Button\n                        icon={<Icon name=\"refresh\" color=\"white\" />}\n                        title=\"New Game\"\n                        onPress={newGameHandler} />\n                    {isNewGame &&\n                        <Text style={{ textAlign: 'center', paddingTop: 10, color: '#eee' }}>\n                            Scores have been reset!\n                        </Text>\n                    }\n                </View>\n\n                <View style={{ flexDirection: 'row', alignItems: 'baseline', padding: 10, justifyContent: 'space-between' }}>\n                    <Text style={{ fontSize: 30, color: '#eee', marginTop: 20 }}>\n                        Players\n                    </Text>\n\n                    {/* <Text style={{ fontSize: 18, color: '#0a84ff', marginTop: 20, textAlign: 'right' }}>Edit</Text> */}\n                </View>\n\n                {players.map((player, index) => (\n                    <EditPlayer\n                        player={player}\n                        index={index} promptColor={promptColor}\n                        setPlayerWasAdded={setPlayerWasAdded}\n                        playerWasAdded={playerWasAdded}\n                        key={player.uuid}\n                    />\n                ))}\n\n                <View style={{ margin: 10 }}>\n                    <Button title=\"Add Player\"\n                        icon={<Icon name=\"add\" color=\"white\" />}\n                        disabled={players.length >= 8}\n                        onPress={addPlayerHandler} />\n                </View>\n\n                {players.length >= 8 &&\n                    <Text style={styles.text}>Max players reached.</Text>\n                }\n\n                <View style={{ margin: 50 }}><Text>&nbsp; </Text></View>\n\n                <View style={{ marginVertical: 30 }}>\n                    <Text style={styles.text}>\n                        Version {appJson.expo.version}\n                    </Text>\n                    {Platform.OS == 'ios' &&\n                        <Text style={styles.text}>{Platform.OS} build {appJson.expo.ios.buildNumber}</Text>\n                    }\n                    {Platform.OS == 'android' &&\n                        <Text style={styles.text}>{Platform.OS} build {appJson.expo.android.versionCode}</Text>\n                    }\n                </View>\n            </View>\n\n        </KeyboardAwareScrollView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    configScrollContainer: {\n        flex: 1,\n        padding: 10,\n        paddingBottom: 50,\n    },\n    text: {\n        fontSize: 18,\n        margin: 15,\n        color: '#eee',\n    },\n});\n\nexport default ConfigureScreen;","import 'react-native-get-random-values';\nimport { v4 as uuidv4 } from 'uuid';\nimport {\n    INC_PLAYER_ROUND_SCORE,\n    DEC_PLAYER_ROUND_SCORE,\n    NEXT_ROUND, PREV_ROUND,\n    SET_PLAYER_NAME, NEW_GAME,\n    ADD_PLAYER,\n    REMOVE_PLAYER\n} from \"./CurrentGameActions\"\n\nconst initialState = {\n    players: [\n        { name: 'Player 1', uuid: uuidv4() },\n        { name: 'Player 2', uuid: uuidv4() },\n    ],\n    scores: [\n        [0],\n        [0],\n    ],\n    currentRound: 0,\n}\n\nconst currentGameReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INC_PLAYER_ROUND_SCORE:\n            const incrementedPlayerScores = [...state.scores];\n            incrementedPlayerScores[action.index][state.currentRound] =\n                (incrementedPlayerScores[action.index][state.currentRound] || 0) + (action.multiplier || 1);\n            return { ...state, scores: incrementedPlayerScores };\n\n        case DEC_PLAYER_ROUND_SCORE:\n            const decrementedPlayerScores = [...state.scores];\n            decrementedPlayerScores[action.index][state.currentRound] =\n                (decrementedPlayerScores[action.index][state.currentRound] || 0) - (action.multiplier || 1);\n            return { ...state, scores: decrementedPlayerScores };\n\n        case PREV_ROUND:\n            if (state.currentRound - 1 < 0) {\n                return state;\n            } else {\n                const prevRound = state.currentRound - 1;\n                return { ...state, currentRound: prevRound };\n            }\n\n        case NEXT_ROUND:\n            const nextRound = state.currentRound + 1;\n\n            // TODO: clean up\n            if (state.scores[0][nextRound] === undefined) {\n                const copy = [...state.scores];\n\n                state.players.forEach((name, index) => {\n                    copy[index][nextRound] = 0;\n                })\n                return {\n                    ...state,\n                    scores: copy,\n                    currentRound: nextRound\n                };\n            }\n\n            return {\n                ...state,\n                currentRound: nextRound\n            };\n\n        case SET_PLAYER_NAME:\n            let copy = [...state.players];\n            copy[action.index] = { ...copy[action.index], name: action.name, };\n            return { ...state, players: copy };\n\n        case ADD_PLAYER:\n            let apPlayers = [...state.players].concat({\n                name: action.name,\n                uuid: uuidv4()\n            });\n            const apScores = [...state.scores].concat([\n                Array(state.scores[0].length).fill(0)\n            ]);\n            return { ...state, players: apPlayers, scores: apScores };\n\n        case REMOVE_PLAYER:\n            let rpCopy = [...state.players];\n            rpCopy.splice(action.index, 1)\n\n            const rpScores = [...state.scores];\n            rpScores.splice(action.index, 1)\n            return { ...state, players: rpCopy, scores: rpScores };\n\n        case NEW_GAME:\n            let newScores = [];\n            state.players.forEach((name, index) => {\n                newScores[index] = [0]\n            })\n            return {\n                ...state,\n                scores: newScores,\n                currentRound: 0,\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport default currentGameReducer;","export const TOGGLE_HOME_FULLSCREEN = 'TOGGLE_HOME_FULLSCREEN';\nexport const TOGGLE_MULTIPLIER = 'TOGGLE_MULTIPLIER';\n\nexport const toggleHomeFullscreen = { type: TOGGLE_HOME_FULLSCREEN }\nexport const toggleMultiplier = { type: TOGGLE_MULTIPLIER }\n","import {\n    TOGGLE_HOME_FULLSCREEN,\n    TOGGLE_MULTIPLIER,\n} from \"./SettingsActions\";\n\nconst initialState = {\n    home_fullscreen: false,\n    multiplier: 1,\n}\n\nconst settingsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case TOGGLE_HOME_FULLSCREEN:\n            return { ...state, home_fullscreen: !state.home_fullscreen };\n\n        case TOGGLE_MULTIPLIER:\n            return { ...state, multiplier: state.multiplier == 1 ? 5 : 1 };\n\n        default:\n            return state;\n    }\n};\n\nexport default settingsReducer;","import { createStore, combineReducers } from 'redux';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { persistStore, persistReducer } from 'redux-persist';\n\nimport currentGameReducer from './CurrentGameReducer';\nimport settingsReducer from './SettingsReducer';\nimport createMigrate from 'redux-persist/es/createMigrate';\nimport 'react-native-get-random-values';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst migrations = {\n    // 0: (state) => {\n    // const players = state.players\n    // return {\n    //     ...state,\n    //     players: [\n    //         { name: 'player 1', uuid: uuidv4() },\n    //         { name: 'player 2', uuid: uuidv4() },\n    //     ],\n    // }\n    // }\n}\n\nconst currentGamePersistConfig = {\n    key: 'root',\n    version: '0',\n    storage: AsyncStorage,\n    whitelist: ['players', 'scores', 'currentRound',],\n    migrate: createMigrate(migrations, { debug: true }),\n};\n\nconst settingsPersistConfig = {\n    key: 'settings',\n    version: '0',\n    storage: AsyncStorage,\n    whitelist: ['home_fullscreen', 'multiplier'],\n};\n\nconst rootReducer = combineReducers({\n    currentGame: persistReducer(currentGamePersistConfig, currentGameReducer),\n    settings: persistReducer(settingsPersistConfig, settingsReducer),\n})\n\nexport const store = createStore(rootReducer);\nexport const persistor = persistStore(store);","import React from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\nimport { Icon } from 'react-native-elements/dist/icons/Icon';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Feather } from '@expo/vector-icons';\nimport { s, vs, ms, mvs } from 'react-native-size-matters';\n\nimport { nextRound, prevRound } from '../../redux/CurrentGameActions';\nimport { toggleHomeFullscreen, toggleMultiplier } from '../../redux/SettingsActions';\n\nfunction RoundTitle({ navigation }) {\n    const dispatch = useDispatch();\n\n    const currentRound = useSelector(state => state.currentGame.currentRound);\n    const expanded = useSelector(state => state.settings.home_fullscreen);\n    const multiplier = useSelector(state => state.settings.multiplier);\n\n    const nextRoundHandler = () => {\n        dispatch(nextRound());\n    }\n\n    const prevRoundHandler = () => {\n        dispatch(prevRound());\n    }\n\n    const expandHandler = () => {\n        dispatch(toggleHomeFullscreen);\n    }\n\n    const multiplierHandler = () => {\n        dispatch(toggleMultiplier);\n    }\n\n    return (\n        <SafeAreaView edges={['top']} style={[styles.title]}>\n            <SafeAreaView edges={['left']} style={{ flexDirection: 'row' }}>\n                <TouchableOpacity\n                    style={{ justifyContent: 'center' }}\n                    onPress={multiplierHandler} >\n                    <Text style={[styles.multiplier]}>{multiplier} pt</Text>\n                </TouchableOpacity>\n            </SafeAreaView>\n\n            <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n                <TouchableOpacity\n                    style={{ justifyContent: 'center' }}\n                    onPress={prevRoundHandler} >\n                    <View>\n                        <Icon name=\"chevron-left\" type=\"font-awesome-5\" size={25} color=\"#0a84ff\" style={[styles.roundButton, { opacity: currentRound == 0 ? 0 : 1 }]} />\n                    </View>\n                </TouchableOpacity>\n\n                <Text style={{\n                    fontSize: 25,\n                    color: 'white',\n                    fontVariant: ['tabular-nums'],\n                    fontWeight: 'bold'\n                }}>Round {currentRound + 1}</Text>\n\n                <TouchableOpacity\n                    style={{ justifyContent: 'center', }}\n                    onPress={nextRoundHandler} >\n                    <View>\n                        <Icon name=\"chevron-right\" type=\"font-awesome-5\" size={25} color=\"#0a84ff\" style={[styles.roundButton]} />\n                    </View>\n                </TouchableOpacity>\n\n            </View>\n            <SafeAreaView edges={['right']}>\n                <Icon size={25} name={expanded ? 'expand-alt' : 'compress-alt'} color=\"#0a84ff\" type=\"font-awesome-5\" onPress={expandHandler} />\n            </SafeAreaView>\n        </SafeAreaView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    title: {\n        textAlign: 'center',\n        flexDirection: 'row',\n        alignItems: 'baseline',\n        justifyContent: 'space-between',\n        backgroundColor: 'black',\n        paddingBottom: 10,\n    },\n    multiplier: {\n        color: '#0a84ff',\n        paddingHorizontal: 5,\n        fontSize: 25,\n        fontWeight: 'bold',\n        fontVariant: ['tabular-nums'],\n    },\n    roundButton: {\n        fontSize: 25,\n        paddingHorizontal: 10,\n        fontWeight: 'bold',\n        color: '#0a84ff',\n    },\n});\n\nexport default RoundTitle;","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { createAppContainer } from \"react-navigation\";\nimport { createStackNavigator } from \"react-navigation-stack\";\nimport { DefaultTheme, DarkTheme } from \"@react-navigation/native\";\nimport ScoreBoardScreen from \"./src/screens/ScoreBoardScreen\";\nimport ConfigureScreen from \"./src/screens/ConfigureScreen\";\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport RoundTitle from './src/components/RoundTitle';\n\nconst navigator = createStackNavigator(\n    {\n        ScoreBoard: {\n            screen: ScoreBoardScreen,\n            navigationOptions: ({ navigation }) => ({\n                headerShown: true,\n                header: (navigation) => {\n                    return <RoundTitle />;\n                }\n            }),\n        },\n        Configure: {\n            screen: ConfigureScreen,\n            navigationOptions: ({ navigation }) => ({\n                title: \"Configure\",\n                headerBackTitle: \"Back\"\n            }),\n        },\n    },\n    {\n        initialRouteName: \"ScoreBoard\",\n        defaultNavigationOptions: {\n            title: \"Round \",\n        },\n    }\n);\n\nlet Navigation = createAppContainer(navigator);\n\n// Render the app container component with the provider around it\nexport default class App extends React.Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <PersistGate loading={null} persistor={persistor}>\n                    <Navigation theme=\"dark\" />\n                </PersistGate>\n            </Provider>\n        );\n    }\n}\n","module.exports = __webpack_public_path__ + \"static/media/infographic.68df0368.png\";"],"sourceRoot":""}